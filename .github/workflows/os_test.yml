name: CI Pipeline

on:
  push:
    branches:
      - precompilation
    # paths:
    #   - 'gbrl/**'   # Trigger on changes to files in the src directory
  pull_request:
    branches:
      - master
  workflow_dispatch:

jobs:
  build-and-test:
    runs-on: ${{ matrix.os }}
    
    strategy:
      matrix:
        os: [macos-latest]
        python-version: ['3.10']

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies on Ubuntu
      if: matrix.os == 'ubuntu-latest'
      run: |
        sudo apt-get update
        sudo apt-get install -y lcov g++ gcc

    - name: Install dependencies on MacOs
      if: matrix.os == 'macos-latest'
      run: |
        brew install libomp llvm
        # Dynamic paths for Homebrew-installed tools
    - name: Set up LLVM and environment
      run: |
        echo "Adding LLVM to path"
        export PATH="/opt/homebrew/opt/llvm/bin:$PATH"
        which clang
        which clang++

    - name: Check LLVM architecture
      run: |
        echo "Checking LLVM compiler architecture..."
        file /opt/homebrew/opt/llvm/bin/clang
        file /opt/homebrew/opt/llvm/bin/clang++

    - name: Install Python dependencies and build the project with coverage
      run: |
        python -m pip install --upgrade pip
        BREW_PREFIX=$(brew --prefix)
        brew reinstall cmake

        export LDFLAGS="-L${BREW_PREFIX}/ffmpeg/lib -L${BREW_PREFIX}/libomp/lib -L${BREW_PREFIX}/llvm/lib -L${BREW_PREFIX}/llvm/lib/c++ -Wl,-rpath,${BREW_PREFIX}/llvm/lib/c++ -lunwind"
        export CPPFLAGS="-I${BREW_PREFIX}/ffmpeg/include -I${BREW_PREFIX}/libomp/include -I${BREW_PREFIX}/llvm/include"
        export CC="${BREW_PREFIX}/llvm/bin/clang"
        export CXX="${BREW_PREFIX}/llvm/bin/clang++"
        export PATH="${BREW_PREFIX}/llvm/bin:$PATH"
        export DYLD_LIBRARY_PATH="${BREW_PREFIX}/llvm/lib:${BREW_PREFIX}/libomp/lib:$DYLD_LIBRARY_PATH"

        # Ensure the correct architecture is being targeted for macOS on Apple Silicon (arm64)
        export CMAKE_OSX_ARCHITECTURES="arm64"
        DEBUG=1 pip install .

    - name: Run tests
      run: |
        python -m unittest discover tests


